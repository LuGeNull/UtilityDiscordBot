// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UtilsBot.Datenbank;

#nullable disable

namespace UtilsBot.Migrations
{
    [DbContext(typeof(BotDbContext))]
    [Migration("20250706204558_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("UtilsBot.AllgemeinePerson", b =>
                {
                    b.Property<ulong>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("BenachrichtigenZeitBis")
                        .HasColumnType("INTEGER");

                    b.Property<long>("BenachrichtigenZeitVon")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<ulong>("GuildId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("WillBenachrichtigungenBekommen")
                        .HasColumnType("INTEGER");

                    b.Property<long>("Xp")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ZuletztImChannel")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("AllgemeinePerson");
                });

            modelBuilder.Entity("UtilsBot.BenachrichtigungEingegangen", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<ulong?>("AllgemeinePersonUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EingegangenVonDisplayName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<ulong>("EingegangenVonUserID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EingegangenZeitpunkt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AllgemeinePersonUserId");

                    b.ToTable("BenachrichtigungEingegangen");
                });

            modelBuilder.Entity("UtilsBot.BenachrichtigungEingegangen", b =>
                {
                    b.HasOne("UtilsBot.AllgemeinePerson", null)
                        .WithMany("BenachrichtigungEingegangen")
                        .HasForeignKey("AllgemeinePersonUserId");
                });

            modelBuilder.Entity("UtilsBot.AllgemeinePerson", b =>
                {
                    b.Navigation("BenachrichtigungEingegangen");
                });
#pragma warning restore 612, 618
        }
    }
}
