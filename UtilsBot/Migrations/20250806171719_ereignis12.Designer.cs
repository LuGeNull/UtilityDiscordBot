// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UtilsBot.Datenbank;

#nullable disable

namespace UtilsBot.Migrations
{
    [DbContext(typeof(BotDbContext))]
    [Migration("20250806171719_ereignis12")]
    partial class ereignis12
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("UtilsBot.AllgemeinePerson", b =>
                {
                    b.Property<ulong>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("BekommtZurzeitSoVielXp")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<ulong>("GuildId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastXpGainDate")
                        .HasColumnType("TEXT");

                    b.Property<long>("Xp")
                        .HasColumnType("INTEGER");

                    b.Property<int>("XpTodayByMessages")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ZuletztImChannel")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("AllgemeinePerson", (string)null);
                });

            modelBuilder.Entity("UtilsBot.Bet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<ulong>("ChannelId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EndedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Ereignis1Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Ereignis2Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<ulong>("MessageId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ReferenzId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<ulong>("UserIdStartedBet")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Bet");
                });

            modelBuilder.Entity("UtilsBot.BetPlacements", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("BetId")
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("Einsatz")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Site")
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BetId");

                    b.ToTable("Placements");
                });

            modelBuilder.Entity("UtilsBot.BetPlacements", b =>
                {
                    b.HasOne("UtilsBot.Bet", "Bet")
                        .WithMany("Placements")
                        .HasForeignKey("BetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bet");
                });

            modelBuilder.Entity("UtilsBot.Bet", b =>
                {
                    b.Navigation("Placements");
                });
#pragma warning restore 612, 618
        }
    }
}
